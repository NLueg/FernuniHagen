#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\fancyhf{}               % Clear fancy header/footer
\fancyhead[L]{Alexander Albrant - 8950210}   % My name in Left footer
\fancyhead[R]{\today}  % Page number in Right footer
\makeatletter
\let\ps@plain\ps@fancy   % Plain page style = fancy page style
\makeatother
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman Arial
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Part*
Aufgabe 2.1 (SOM)
\end_layout

\begin_layout Standard
Für den Geschäftsprozess 
\begin_inset Quotes eld
\end_inset


\emph on
Auftragsabwicklung
\emph default

\begin_inset Quotes erd
\end_inset

 werden die Geschäftsobjekte 
\begin_inset Quotes eld
\end_inset


\emph on
Auftraggeber
\emph default

\begin_inset Quotes erd
\end_inset

 und 
\begin_inset Quotes eld
\end_inset

 
\emph on
Auftragnehmer
\emph default

\begin_inset Quotes erd
\end_inset

 identifiziert.
 
\begin_inset Quotes eld
\end_inset


\emph on
Auftraggeber
\emph default

\begin_inset Quotes erd
\end_inset

 ist dabei ein externes Geschäftsobjekt.
 
\begin_inset Quotes gld
\end_inset


\emph on
Beauftragen
\emph default

\begin_inset Quotes grd
\end_inset

 ist die Geschäftstransaktion, welche durch den 
\begin_inset Quotes eld
\end_inset


\emph on
Auftraggeber
\emph default

\begin_inset Quotes erd
\end_inset

 mit der Aufgabe eines Auftrages initiiert wird.
 Das dazugehörige Interaktion und Aufgaben-Ereignis-Schema ist in der Abbildung
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Interaktion-und-Aufgaben-Ereigni"

\end_inset

 dargestellt.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename D:/SkyDrive/FernuniHagen/2.semester/01770_BIS/EA2/img/ea2_21_1.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Interaktion und Aufgaben-Ereignis-Schema
\begin_inset CommandInset label
LatexCommand label
name "fig:Interaktion-und-Aufgaben-Ereigni"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Geschäftstransaktion wird in die folgenden vier Untergeschäftstransaktionen
 zerlegt (Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Zerlegte-Geschäftstransaktion-Au"

\end_inset

):
\end_layout

\begin_layout Itemize
Angebot einholen
\end_layout

\begin_layout Itemize
Angebot abgeben
\end_layout

\begin_layout Itemize
Auftrag erteilen
\end_layout

\begin_layout Itemize
Auftrag freigeben
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename D:/SkyDrive/FernuniHagen/2.semester/01770_BIS/EA2/img/ea2_21_2.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Zerlegte Geschäftstransaktion 
\begin_inset Quotes gld
\end_inset


\emph on
Auftragabwicklung
\emph default

\begin_inset Quotes grd
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Zerlegte-Geschäftstransaktion-Au"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
In der Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Interaktion-und-Aufgaben-Ereigni-1"

\end_inset

 ist daraus resultierende Interaktion und Aufgaben-Ereignis-Schema dargestellt.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/ea2_21_3.png
	lyxscale 80
	scale 80
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Interaktion und Aufgaben-Ereignis-Schema
\begin_inset CommandInset label
LatexCommand label
name "fig:Interaktion-und-Aufgaben-Ereigni-1"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Part*
Aufgabe 2.2 (ARIS)
\end_layout

\begin_layout Standard
s.
 Anlage
\end_layout

\begin_layout Part*
Aufgabe 2.3 (Modellierung mit ARIS)
\end_layout

\begin_layout Standard
s.
 Anlage
\end_layout

\begin_layout Part*
Audgabe 2.4 (Server-/Handeler-Muster)
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java,numbers=left,numberstyle={\tiny},basicstyle={\tiny\sffamily},tabsize=4,caption={Klasse Server}"
inline false
status open

\begin_layout Plain Layout

import java.io.BufferedReader; 
\end_layout

\begin_layout Plain Layout

import java.io.InputStreamReader;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/**  
\end_layout

\begin_layout Plain Layout

  * Kurs 1770 - Betriebliche Informationssysteme  
\end_layout

\begin_layout Plain Layout

  * Implementierung des Server/Handler-Konzepts  
\end_layout

\begin_layout Plain Layout

  * Erstellt :  05.08.2014  
\end_layout

\begin_layout Plain Layout

  * Ersteller:  RenÃ© Ramacher
\end_layout

\begin_layout Plain Layout

  */ 
\end_layout

\begin_layout Plain Layout
\noindent
\align center

  
\end_layout

\begin_layout Plain Layout
\noindent
\align center

 
\end_layout

\begin_layout Plain Layout

public class Server {
\end_layout

\begin_layout Plain Layout

    public Server() {         
\end_layout

\begin_layout Plain Layout

    	Thread t = new Thread(new Runnable() {             
\end_layout

\begin_layout Plain Layout

			@Override             
\end_layout

\begin_layout Plain Layout

			public void run() { runServer(); }         
\end_layout

\begin_layout Plain Layout

		});         
\end_layout

\begin_layout Plain Layout

		t.start();     
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

	public void runServer() {         
\end_layout

\begin_layout Plain Layout

		while( true ) {             
\end_layout

\begin_layout Plain Layout

			try {                 
\end_layout

\begin_layout Plain Layout

				System.out.println("Server > waiting for new task ...
 ");                 
\end_layout

\begin_layout Plain Layout

				InputStreamReader isr = new InputStreamReader(System.in);           
      
\end_layout

\begin_layout Plain Layout

				BufferedReader br = new BufferedReader(isr);
\end_layout

\begin_layout Plain Layout

			                
\end_layout

\begin_layout Plain Layout

				String test = br.readLine();                 
\end_layout

\begin_layout Plain Layout

				System.out.println("Server > "+ test);                 
\end_layout

\begin_layout Plain Layout

				System.out.println("Server > new handler started");                 
\end_layout

\begin_layout Plain Layout

				Handler handler = new Handler(test);                 
\end_layout

\begin_layout Plain Layout

				Thread.sleep(50);             
\end_layout

\begin_layout Plain Layout
\noindent

			} catch( Exception ignored) {
\end_layout

\begin_layout Plain Layout

            
\end_layout

\begin_layout Plain Layout

			}         
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

	public static void main(String[] args) {         
\end_layout

\begin_layout Plain Layout

		new Server();     
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java,numbers=left,basicstyle={\tiny\sffamily},tabsize=4,caption={Klasse Handler}"
inline false
status open

\begin_layout Plain Layout

package de.shureg.fuh.m1770.ea24;
\end_layout

\begin_layout Plain Layout

/**  
\end_layout

\begin_layout Plain Layout

  * @author Alexander Albrant  
\end_layout

\begin_layout Plain Layout

  * @date 18.10.2015  
\end_layout

\begin_layout Plain Layout

  */ 
\end_layout

\begin_layout Plain Layout

class Handler extends Thread {
\end_layout

\begin_layout Plain Layout
\noindent

    private String command;
\end_layout

\begin_layout Plain Layout

    public Handler(String command) {         
\end_layout

\begin_layout Plain Layout

		this.command = command;         
\end_layout

\begin_layout Plain Layout

		this.start();     
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    @Override     
\end_layout

\begin_layout Plain Layout

	public void run() {         
\end_layout

\begin_layout Plain Layout

		System.out.println("Handler > starts work ...
 " +this.command);         
\end_layout

\begin_layout Plain Layout

		try {             
\end_layout

\begin_layout Plain Layout

			Thread.sleep(10000);         
\end_layout

\begin_layout Plain Layout

		} 
\end_layout

\begin_layout Plain Layout

		catch (InterruptedException exc) {             
\end_layout

\begin_layout Plain Layout

			exc.printStackTrace();         
\end_layout

\begin_layout Plain Layout

		}         
\end_layout

\begin_layout Plain Layout

		System.out.println("Handler > finished ..
 " +this.command);     
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Part*
Audgabe 2.5 (Asynchrones-Aufruf-Muster)
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java,numbers=left,basicstyle={\tiny\sffamily},tabsize=4,caption={Klasse Client}"
inline false
status open

\begin_layout Plain Layout

package de.shureg.fuh.m1770.ea25;
\end_layout

\begin_layout Plain Layout

/**  
\end_layout

\begin_layout Plain Layout

  * Kurs 1770 - Betriebliche Informationssysteme  
\end_layout

\begin_layout Plain Layout

  * Implementierung des Asynchronen Aufrufs  
\end_layout

\begin_layout Plain Layout

  * Erstellt :  05.08.2014  
\end_layout

\begin_layout Plain Layout

  * Ersteller:  RenÃ© Ramacher  
\end_layout

\begin_layout Plain Layout

  */ 
\end_layout

\begin_layout Plain Layout

public class Client {
\end_layout

\begin_layout Plain Layout

    public Client() {         
\end_layout

\begin_layout Plain Layout

		try {             
\end_layout

\begin_layout Plain Layout

			Caller caller1 = new Caller(null);
\end_layout

\begin_layout Plain Layout

		            
\end_layout

\begin_layout Plain Layout

			while( !caller1.returned() ) {                 
\end_layout

\begin_layout Plain Layout

				System.out.println("Client is waiting or doing some other work");    
             
\end_layout

\begin_layout Plain Layout

				Thread.sleep(500);             
\end_layout

\begin_layout Plain Layout

			}             
\end_layout

\begin_layout Plain Layout

			System.out.println("Results received from caller");
\end_layout

\begin_layout Plain Layout

            
\end_layout

\begin_layout Plain Layout

			Caller caller2 = new Caller(this);             
\end_layout

\begin_layout Plain Layout

			System.out.println("Doing a lot of other work");
\end_layout

\begin_layout Plain Layout

        } catch( Exception ignored) {
\end_layout

\begin_layout Plain Layout

        }     
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

    public void callBack() {         System.out.println("Results received
 via callback");     }
\end_layout

\begin_layout Plain Layout

    public static void main(String[] args) {         new Client();     }
 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Java,numbers=left,basicstyle={\tiny\sffamily},tabsize=4,caption={Klasse Caller}"
inline false
status open

\begin_layout Plain Layout

package de.shureg.fuh.m1770.ea25;
\end_layout

\begin_layout Plain Layout

import java.io.IOException;
\end_layout

\begin_layout Plain Layout

/**  
\end_layout

\begin_layout Plain Layout

  * Caller Klasse  
\end_layout

\begin_layout Plain Layout

  * @author Alexander  
\end_layout

\begin_layout Plain Layout

  * @date  23.10.2015  
\end_layout

\begin_layout Plain Layout

  */ 
\end_layout

\begin_layout Plain Layout

public class Caller extends Thread{     
\end_layout

\begin_layout Plain Layout

	private Client client;     
\end_layout

\begin_layout Plain Layout

	private boolean isReturned = false;
\end_layout

\begin_layout Plain Layout

	    public Caller(Client client) {       
\end_layout

\begin_layout Plain Layout

		this.client = client;         
\end_layout

\begin_layout Plain Layout

		this.start();     
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	@Override     
\end_layout

\begin_layout Plain Layout

	public void run(){         
\end_layout

\begin_layout Plain Layout

		System.out.println("Caller start ...");
\end_layout

\begin_layout Plain Layout

	    try {             
\end_layout

\begin_layout Plain Layout

			System.out.println("Caller do some job...
 ");             
\end_layout

\begin_layout Plain Layout

			System.in.read();         
\end_layout

\begin_layout Plain Layout

		} catch (IOException e) {             
\end_layout

\begin_layout Plain Layout

			e.printStackTrace();         
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	    
\end_layout

\begin_layout Plain Layout

		if (this.client != null) {             
\end_layout

\begin_layout Plain Layout

			this.client.callBack();         
\end_layout

\begin_layout Plain Layout

		}         
\end_layout

\begin_layout Plain Layout

		System.out.println("Caller finished job...
 ");         
\end_layout

\begin_layout Plain Layout

		this.isReturned = true;     
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	public boolean returned() {         
\end_layout

\begin_layout Plain Layout

		return isReturned;     
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
